version: "3.8"

services:
  graphql-service:
    build:
      context: ./graphql-service
    ports:
      - "4000:4000"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/reservation_system?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
    depends_on:
      - database
    networks:
      - app-network

  grpc-service:
    build:
      context: ./grpc-service
    ports:
      - "8081:8081"
      - "9090:9090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/reservation_system?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
      server.port: 8081
      grpc.server.port: 9090
    depends_on:
      - database
    networks:
      - app-network

  rest-service:
    build:
      context: ./rest-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/reservation_system?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
    depends_on:
      - database
    networks:
      - app-network

  soap-service:
    build:
      context: ./soap-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/reservation_system?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
    depends_on:
      - database
    networks:
      - app-network

  database:
    image: mysql:8
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: reservation_system
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - graphql-service
      - grpc-service
      - rest-service
      - soap-service
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  grafana_data:
